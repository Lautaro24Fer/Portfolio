---
import TerminalHeaderIcon from "../../icons/TerminalHeaderIcon.astro"
---

<header class=" text-white z-50 h-[6rem] flex items-center justify-between sm:px-[6rem] px-[2rem]"  >
  <a href="/#presentation-section">
    <TerminalHeaderIcon />
  </a>
  <div class="hamburguer-btn opacity-100 lg:opacity-0" id="menubtn">
    <svg xmlns="http://www.w3.org/2000/svg" width="2em" height="2em" viewBox="0 0 24 24"><path fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M20 12H10m10-7H4m16 14H4" color="currentColor"/></svg>
  </div>
  <nav class="flex w-full justify-end"> 
    <ul class="hamburguer-board" >
      <li class="itemNavbar"><a href="/#presentation-section">Presentation</a></li>
      <li class="itemNavbar"><a href="/#habilities-section">Habilitites</a></li>
      <li class="itemNavbar"><a href="/#proyects-section">My work</a></li>
      <li class="itemNavbar"><a href="/#formation-section">Formation</a></li>
      <li>
        <button class="lg:absolute lg:opacity-0 relative opacity-100 bg-white text-slate-800 font-bold rounded-full px-3 py-2" id="close-menu-btn">Close menu</button>
      </li>
    </ul>
  </nav>
  
</header>
<script is:inline>
  document?.addEventListener('astro:page-load', () => {

    const headerEl = document?.querySelector("header");
    window.addEventListener("scroll", () => {
        if (window.scrollY > 100) {
        return headerEl?.classList.add("stickyPosition");
      }
      if (window.scrollY === 0) {
        return headerEl?.classList.remove("stickyPosition");
      }
    });

    const menuButton = document?.querySelector('#menubtn')
    const optionsBoard = document?.querySelector('nav');

    menuButton?.addEventListener('click', async () => {
      headerEl?.classList.remove("stickyPosition");
      optionsBoard?.classList.add('isEnter');
      document.body.style.overflowY = 'hidden';
      document.documentElement.style.overflowY = 'hidden'
    });

    const closeMenuButton = document?.querySelector("#close-menu-btn")
    closeMenuButton?.addEventListener('click', () => {
      optionsBoard?.classList.remove('isEnter');
      document.body.style.overflowY = 'auto';
      document.documentElement.style.overflowY = 'auto'
    })

    const navbarItems = document?.querySelectorAll("nav a")
    navbarItems?.forEach(a => {
      a.addEventListener('click', () => {
        optionsBoard?.classList.remove('isEnter');
        document.body.style.overflowY = 'auto';
        document.documentElement.style.overflowY = 'auto'
        if (window.scrollY > 100) {
        return headerEl?.classList.add("stickyPosition");
        }
      })
    })

  })
</script>
<style>

ul li.itemNavbar {
  cursor: pointer;
  position: relative;
  border: none;
  background: none;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 400ms;
  transition-property: color;
}

ul li.itemNavbar:focus:after,
ul li.itemNavbar:hover:after {
  width: 100%;
  left: 0%;
}

ul li.itemNavbar:after {
  content: "";
  pointer-events: none;
  bottom: -2px;
  left: 50%;
  position: absolute;
  width: 0%;
  height: 1px;
  background-color: #fff;
  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);
  transition-duration: 400ms;
  transition-property: width, left;
}

  li.contact-button{
    transition: all .2s ease-in-out;
  }

  li.contact-button:hover{
    -webkit-box-shadow: 0px 2px 10px -3px rgba(228, 228, 228, 0.75);
  -moz-box-shadow: 0px 2px 10px -3px rgba(228, 228, 228, 0.75);
  box-shadow: 0px 2px 10px -3px rgba(228, 228, 228, 0.75);
  }

  ul.hamburguer-board{
    position: relative;
    display: flex;
    align-items: center;
    gap: 2.5rem;
  }

  @media (width < 1024px){
    nav{
      position: absolute;
      opacity: 0;
      z-index: -10;
      top: -100%;
      right: -100%;
    }

    nav.isEnter{
      transition: all .3s ease;
      position: fixed;
      opacity: 1;
      z-index: 100;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      width: 100vw;
      height: 100vh;
      background-color: rgba(29, 29, 29, 0.484);
      backdrop-filter: blur(15px);
      -webkit-backdrop-filter: blur(30px);
      justify-content: center;
      align-items: center;
    }

    

    nav ul{
      flex-direction: column;
    }

    li a{
      text-transform: capitalize;
      font-weight: bold;
      font-size: larger;
      /* comment asdasd */
    }
  }

  div.hamburguer-btn{
    width: min-content;
    height: min-content;
    border: transparent;
  }

  header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    transition: all 0.2s ease-in;
  }
  header.stickyPosition {
    position: fixed;
    background-color: rgba(29, 29, 29, 0.484);
    backdrop-filter: blur(5px);
    -webkit-backdrop-filter: blur(30px);
    transition: 0.1s;
    animation: animateBlur 0.2s linear;
  }
  @keyframes animateBlur {
    0% {
      transform: translateY(-100px);
    }
    100% {
      transform: translateY(0);
    }
  }

</style>
